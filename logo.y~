%{
#include <stdio.h>
#include <string.h>
#include "logo.h"

static int direction;
static Node* tete;
static int verification_branche=0;
static x_position=100;
static y_position=100;

#define forward 1
#define left 2
#define right 3
#define repeat 4

#define north 1
#define east 2 
#define south 3
#define west 0

#define clockwise 1
#define anticlockwise -1
void yyerror(const char* str)
{
  fprintf(stderr,"error: %s\n",str);
}
int yywrap()
{
  return 1;  
}

%}


%token  FORWARD 
%token  LEFT  	
%token  RIGHT 	
%token  REPEAT	
%token  VALUE
%token  ENTREE
%token  FIN

%union
{
   Node *NODE_TYPE;
   int VAL;
};

%type <VAL> VALUE FORWARD LEFT RIGHT REPEAT ENTREE FIN
%type <NODE_TYPE> BLOC INSTRUCTION

%%
BLOC: INSTRUCTION
{	
   $$=NewProg(); 
   $$=AddNode($$, $1); 
   if(verification_branche==0)
   {
	tete=$$;
	verification_branche++;
   }

} 
| BLOC INSTRUCTION
{
  $$=AddNode($1, $2);
}
INSTRUCTION: FORWARD VALUE
{
   $$=NewNode(1, $2, NULL); 
}
|LEFT VALUE
{
   $$=NewNode(2, $2, NULL); 
}
|RIGHT VALUE
{
   $$=NewNode(3, $2, NULL); 
}
|REPEAT VALUE ENTREE BLOC FIN
{
   $$=NewNode(4, $2, $4); 
}
%%

int which_direction(int direction_of_spin, int original_direction, int times)
{
   int k=(original_direction+direction_of_spin*times)%4;
   if(k<0)
	k=k+4;
   return k;
}

int main()
{
  FILE* fp;
  fp=fopen("cible.svg","a");
  char headofsvg[] = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n";
  char annonce[] = "<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"200\" height=\"200\">\n";
  char title[] = "<title>Exemple LOGO</title>";
  char desc[] = "<desc>Du LOGO.</desc>";
  fwrite(headofsvg, 1, sizeof(headofsvg), fp);
  fwrite(annonce, 1, sizeof(annonce), fp);
  fwrite(title, 1, sizeof(title), fp);
  fwrite(desc, 1, sizeof(desc),fp);

  yyparse();
  PrintProgram(tete);  
  return 0;
}


